import "reflect-metadata";
import { Container } from "typedi";

import { IUserRepositoryToken } from "../../application/repositories/IUserRepository";
import { UserRepository } from "../repositories/UserRepository";
import { IVerficaitonCodeRepositoryToken } from "../../application/repositories/IVerificaitonCodeRepository";
import { VerificationCodeRepository } from "../repositories/VerficationCodeRepository";
import { ISessionRepositoryToken } from "../../application/repositories/ISessionRepository";
import { SessionRepository } from "../repositories/SessionRepository";
import { IOtpReposirtoryCodeToken } from "../../application/repositories/IOtpReposirtory";
import { OtpRepository } from "../repositories/OtpRepository";
import { IDoctorRepositoryToken } from "../../application/repositories/IDoctorReposirtory";
import { DoctorRepository } from "../repositories/DoctorRepository";
import { IAdminRepositoryToken } from "../../application/repositories/IAdminRepository";
import { AdminRepository } from "../repositories/AdminRepository";
import { INotificationRepositoryToken } from "../../application/repositories/INotificationRepository";
import { NotificationRepository } from "../repositories/NotifcationRepository";
import { ISlotRepositoryToken } from "../../application/repositories/ISlotRepository";
import { SlotRepository } from "../repositories/SlotRepository";
import { IAppointmentRepositoryToken } from "../../application/repositories/IAppointmentRepository";
import { AppointmentRepository } from "../repositories/AppointmentRepository";
import { IWalletRepositoryToken } from "../../application/repositories/IWalletRepository";
import { IChatRepositoryToken } from "../../application/repositories/IChatRepository";
import { ChatRepository } from "../repositories/ChatRepository";
import { IConversationRepositoryToken } from "../../application/repositories/IConversationRepository";
import { ConversationRepository } from "../repositories/ConversationRepository";
import { ICaloriesDetailsRepositoryToken } from "../../application/repositories/ICaloriesDetailsRepository";
import { CaloriesRepository } from "../repositories/CaloriresRepository";
import { IPremiumSubscriptionRepositoryToken } from "../../application/repositories/IPremiumSubscription";
import { PremiumSubscriptionRepository } from "../repositories/PremiumSubscription";
import { ITransactionRepositoryToken } from "../../application/repositories/ITransactionRepository";
import { TransactionRepository } from "../repositories/TransactionRepository";
import { IReviewsRepositoryToken } from "../../application/repositories/IReviewsRepository";
import { ReviewsRepository } from "../repositories/ReviewsRepository";
import { IRatingRepositoryToken } from "../../application/repositories/IRatingsRepository";
import { RatingsRepository } from "../repositories/RatingsRepository";
import WalletRepository from "../repositories/WalletRepository";

Container.set(IUserRepositoryToken, new UserRepository());
Container.set(IVerficaitonCodeRepositoryToken, new VerificationCodeRepository());
Container.set(ISessionRepositoryToken, new SessionRepository());
Container.set(IOtpReposirtoryCodeToken, new OtpRepository());
Container.set(IDoctorRepositoryToken, new DoctorRepository());
Container.set(IAdminRepositoryToken, new AdminRepository());
Container.set(INotificationRepositoryToken, new NotificationRepository());
Container.set(ISlotRepositoryToken, new SlotRepository());
Container.set(IAppointmentRepositoryToken, new AppointmentRepository());
Container.set(IWalletRepositoryToken, new WalletRepository());
Container.set(IChatRepositoryToken, new ChatRepository());
Container.set(IConversationRepositoryToken, new ConversationRepository());
Container.set(ICaloriesDetailsRepositoryToken, new CaloriesRepository());
Container.set(IPremiumSubscriptionRepositoryToken, new PremiumSubscriptionRepository());
Container.set(ITransactionRepositoryToken, new TransactionRepository());
Container.set(IReviewsRepositoryToken, new ReviewsRepository());
Container.set(IRatingRepositoryToken, new RatingsRepository());
