"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
const typedi_1 = require("typedi");
const IUserRepository_1 = require("../../application/repositories/IUserRepository");
const UserRepository_1 = require("../repositories/UserRepository");
const IVerificaitonCodeRepository_1 = require("../../application/repositories/IVerificaitonCodeRepository");
const VerficationCodeRepository_1 = require("../repositories/VerficationCodeRepository");
const ISessionRepository_1 = require("../../application/repositories/ISessionRepository");
const SessionRepository_1 = require("../repositories/SessionRepository");
const IOtpReposirtory_1 = require("../../application/repositories/IOtpReposirtory");
const OtpRepository_1 = require("../repositories/OtpRepository");
const IDoctorReposirtory_1 = require("../../application/repositories/IDoctorReposirtory");
const DoctorRepository_1 = require("../repositories/DoctorRepository");
const IAdminRepository_1 = require("../../application/repositories/IAdminRepository");
const AdminRepository_1 = require("../repositories/AdminRepository");
const INotificationRepository_1 = require("../../application/repositories/INotificationRepository");
const NotifcationRepository_1 = require("../repositories/NotifcationRepository");
const ISlotRepository_1 = require("../../application/repositories/ISlotRepository");
const SlotRepository_1 = require("../repositories/SlotRepository");
const IAppointmentRepository_1 = require("../../application/repositories/IAppointmentRepository");
const AppointmentRepository_1 = require("../repositories/AppointmentRepository");
const IWalletRepository_1 = require("../../application/repositories/IWalletRepository");
const IChatRepository_1 = require("../../application/repositories/IChatRepository");
const ChatRepository_1 = require("../repositories/ChatRepository");
const IConversationRepository_1 = require("../../application/repositories/IConversationRepository");
const ConversationRepository_1 = require("../repositories/ConversationRepository");
const ICaloriesDetailsRepository_1 = require("../../application/repositories/ICaloriesDetailsRepository");
const CaloriresRepository_1 = require("../repositories/CaloriresRepository");
const IPremiumSubscription_1 = require("../../application/repositories/IPremiumSubscription");
const PremiumSubscription_1 = require("../repositories/PremiumSubscription");
const ITransactionRepository_1 = require("../../application/repositories/ITransactionRepository");
const TransactionRepository_1 = require("../repositories/TransactionRepository");
const IReviewsRepository_1 = require("../../application/repositories/IReviewsRepository");
const ReviewsRepository_1 = require("../repositories/ReviewsRepository");
const IRatingsRepository_1 = require("../../application/repositories/IRatingsRepository");
const RatingsRepository_1 = require("../repositories/RatingsRepository");
const WalletRepository_1 = __importDefault(require("../repositories/WalletRepository"));
const IUserSubscriptionRepository_1 = require("../../application/repositories/IUserSubscriptionRepository");
const UserSubscription_1 = require("../repositories/UserSubscription");
const IAdminUseCase_1 = require("../../application/user-casers/interface/IAdminUseCase");
const AdminUseCase_1 = require("../../application/user-casers/AdminUseCase");
const IAppUseCase_1 = require("../../application/user-casers/interface/IAppUseCase");
const AppUseCase_1 = require("../../application/user-casers/AppUseCase");
const ICaloriesUseCase_1 = require("../../application/user-casers/interface/ICaloriesUseCase");
const CaloriesUserCase_1 = require("../../application/user-casers/CaloriesUserCase");
const IChatUseCase_1 = require("../../application/user-casers/interface/IChatUseCase");
const ChatUseCase_1 = require("../../application/user-casers/ChatUseCase");
const IDoctorFeatUseCase_1 = require("../../application/user-casers/interface/IDoctorFeatUseCase");
const DoctorFeatUseCase_1 = require("../../application/user-casers/DoctorFeatUseCase");
const IDoctorUseCase_1 = require("../../application/user-casers/interface/IDoctorUseCase");
const DoctorUseCase_1 = require("../../application/user-casers/DoctorUseCase");
const IPaymentUseCase_1 = require("../../application/user-casers/interface/IPaymentUseCase");
const PaymentUseCase_1 = require("../../application/user-casers/PaymentUseCase");
const IRegisterUseCase_1 = require("../../application/user-casers/interface/IRegisterUseCase");
const RegisterUserUseCase_1 = require("../../application/user-casers/RegisterUserUseCase");
const IWebRtcUseCase_1 = require("../../application/user-casers/interface/IWebRtcUseCase");
const WebRtcUseCase_1 = require("../../application/user-casers/WebRtcUseCase");
const IAdminController_1 = require("../../interface/controllerInterface/IAdminController");
const AdminController_1 = require("../../interface/controllers/Admin/AdminController");
const IAppController_1 = require("../../interface/controllerInterface/IAppController");
const AppController_1 = require("../../interface/controllers/Feat/AppController");
const IUserController_1 = require("../../interface/controllerInterface/IUserController");
const UserController_1 = require("../../interface/controllers/auth/UserController");
const IDoctorController_1 = require("../../interface/controllerInterface/IDoctorController");
const DoctorController_1 = require("../../interface/controllers/doctor/DoctorController");
const IDoctorFeatController_1 = require("../../interface/controllerInterface/IDoctorFeatController");
const DoctorFeatController_1 = require("../../interface/controllers/doctor/DoctorFeatController");
const ICaloriesController_1 = require("../../interface/controllerInterface/ICaloriesController");
const CaloriesControllle_1 = require("../../interface/controllers/Feat/CaloriesControllle");
const IChatController_1 = require("../../interface/controllerInterface/IChatController");
const ChatController_1 = require("../../interface/controllers/Feat/ChatController");
const IPaymentController_1 = require("../../interface/controllerInterface/IPaymentController");
const PaymentController_1 = require("../../interface/controllers/Feat/PaymentController");
const IWebRtcCotroller_1 = require("../../interface/controllerInterface/IWebRtcCotroller");
const WebRtcController_1 = require("../../interface/controllers/Feat/WebRtcController");
typedi_1.Container.set(IUserRepository_1.IUserRepositoryToken, new UserRepository_1.UserRepository());
typedi_1.Container.set(IVerificaitonCodeRepository_1.IVerficaitonCodeRepositoryToken, new VerficationCodeRepository_1.VerificationCodeRepository());
typedi_1.Container.set(ISessionRepository_1.ISessionRepositoryToken, new SessionRepository_1.SessionRepository());
typedi_1.Container.set(IOtpReposirtory_1.IOtpReposirtoryCodeToken, new OtpRepository_1.OtpRepository());
typedi_1.Container.set(IDoctorReposirtory_1.IDoctorRepositoryToken, new DoctorRepository_1.DoctorRepository());
typedi_1.Container.set(IAdminRepository_1.IAdminRepositoryToken, new AdminRepository_1.AdminRepository());
typedi_1.Container.set(INotificationRepository_1.INotificationRepositoryToken, new NotifcationRepository_1.NotificationRepository());
typedi_1.Container.set(ISlotRepository_1.ISlotRepositoryToken, new SlotRepository_1.SlotRepository());
typedi_1.Container.set(IAppointmentRepository_1.IAppointmentRepositoryToken, new AppointmentRepository_1.AppointmentRepository());
typedi_1.Container.set(IWalletRepository_1.IWalletRepositoryToken, new WalletRepository_1.default());
typedi_1.Container.set(IChatRepository_1.IChatRepositoryToken, new ChatRepository_1.ChatRepository());
typedi_1.Container.set(IConversationRepository_1.IConversationRepositoryToken, new ConversationRepository_1.ConversationRepository());
typedi_1.Container.set(ICaloriesDetailsRepository_1.ICaloriesDetailsRepositoryToken, new CaloriresRepository_1.CaloriesRepository());
typedi_1.Container.set(IPremiumSubscription_1.IPremiumSubscriptionRepositoryToken, new PremiumSubscription_1.PremiumSubscriptionRepository());
typedi_1.Container.set(ITransactionRepository_1.ITransactionRepositoryToken, new TransactionRepository_1.TransactionRepository());
typedi_1.Container.set(IReviewsRepository_1.IReviewsRepositoryToken, new ReviewsRepository_1.ReviewsRepository());
typedi_1.Container.set(IRatingsRepository_1.IRatingRepositoryToken, new RatingsRepository_1.RatingsRepository());
typedi_1.Container.set(IUserSubscriptionRepository_1.IUserSubscriptionRepositoryToken, new UserSubscription_1.UserSubscriptionRepository());
//** controllers**
typedi_1.Container.set(IAdminController_1.IAdminControllerToken, typedi_1.Container.get(AdminController_1.AdminController));
typedi_1.Container.set(IAppController_1.IAppControllerToken, typedi_1.Container.get(AppController_1.AppController));
typedi_1.Container.set(IUserController_1.IUserControllerToken, typedi_1.Container.get(UserController_1.UserController));
typedi_1.Container.set(IDoctorController_1.IDoctorControllerToken, typedi_1.Container.get(DoctorController_1.DoctorController));
typedi_1.Container.set(IDoctorFeatController_1.IDoctorFeatControllerToken, typedi_1.Container.get(DoctorFeatController_1.DoctorFeatController));
typedi_1.Container.set(ICaloriesController_1.ICaloriesControllerToken, typedi_1.Container.get(CaloriesControllle_1.CaloriesController));
typedi_1.Container.set(IChatController_1.IChatControllerToken, typedi_1.Container.get(ChatController_1.ChatController));
typedi_1.Container.set(IPaymentController_1.IPaymentControllerToken, typedi_1.Container.get(PaymentController_1.PaymentController));
typedi_1.Container.set(IWebRtcCotroller_1.IWebRtcControllerToken, typedi_1.Container.get(WebRtcController_1.WebRtcController));
//**usecases**
typedi_1.Container.set(IAdminUseCase_1.IAdminUseCaseToken, typedi_1.Container.get(AdminUseCase_1.AdminUseCase));
typedi_1.Container.set(IAppUseCase_1.IAppUseCaseToken, typedi_1.Container.get(AppUseCase_1.AppUseCase));
typedi_1.Container.set(ICaloriesUseCase_1.ICaloriesUseCaseToken, typedi_1.Container.get(CaloriesUserCase_1.CaloriesUseCase));
typedi_1.Container.set(IChatUseCase_1.IChatUseCaseToken, typedi_1.Container.get(ChatUseCase_1.ChatUseCase));
typedi_1.Container.set(IDoctorFeatUseCase_1.IDoctorFeatUseCaseToken, typedi_1.Container.get(DoctorFeatUseCase_1.DoctorFeatUseCase));
typedi_1.Container.set(IDoctorUseCase_1.IDoctorUseCaseToken, typedi_1.Container.get(DoctorUseCase_1.DoctorUseCase));
typedi_1.Container.set(IPaymentUseCase_1.IPaymentUseCaseToken, typedi_1.Container.get(PaymentUseCase_1.PaymentUseCase));
typedi_1.Container.set(IRegisterUseCase_1.IRegisterUseCaseToken, typedi_1.Container.get(RegisterUserUseCase_1.RegisterUserUseCase));
typedi_1.Container.set(IWebRtcUseCase_1.IWebRtcUseCaseToken, typedi_1.Container.get(WebRtcUseCase_1.WebRtcUseCase));
